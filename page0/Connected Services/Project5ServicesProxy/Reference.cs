//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project5.Project5ServicesProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Project5ServicesProxy.IProject5Services")]
    public interface IProject5Services {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/AddMember", ReplyAction="http://tempuri.org/IProject5Services/AddMemberResponse")]
        void AddMember(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/AddMember", ReplyAction="http://tempuri.org/IProject5Services/AddMemberResponse")]
        System.Threading.Tasks.Task AddMemberAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/AddStaffMember", ReplyAction="http://tempuri.org/IProject5Services/AddStaffMemberResponse")]
        void AddStaffMember(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/AddStaffMember", ReplyAction="http://tempuri.org/IProject5Services/AddStaffMemberResponse")]
        System.Threading.Tasks.Task AddStaffMemberAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/MemberExists", ReplyAction="http://tempuri.org/IProject5Services/MemberExistsResponse")]
        bool MemberExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/MemberExists", ReplyAction="http://tempuri.org/IProject5Services/MemberExistsResponse")]
        System.Threading.Tasks.Task<bool> MemberExistsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/StaffExists", ReplyAction="http://tempuri.org/IProject5Services/StaffExistsResponse")]
        bool StaffExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/StaffExists", ReplyAction="http://tempuri.org/IProject5Services/StaffExistsResponse")]
        System.Threading.Tasks.Task<bool> StaffExistsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/SearchForWsdl", ReplyAction="http://tempuri.org/IProject5Services/SearchForWsdlResponse")]
        string[] SearchForWsdl(string theSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/SearchForWsdl", ReplyAction="http://tempuri.org/IProject5Services/SearchForWsdlResponse")]
        System.Threading.Tasks.Task<string[]> SearchForWsdlAsync(string theSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperations", ReplyAction="http://tempuri.org/IProject5Services/WsOperationsResponse")]
        string[] WsOperations(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperations", ReplyAction="http://tempuri.org/IProject5Services/WsOperationsResponse")]
        System.Threading.Tasks.Task<string[]> WsOperationsAsync(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperationNames", ReplyAction="http://tempuri.org/IProject5Services/WsOperationNamesResponse")]
        string[] WsOperationNames(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperationNames", ReplyAction="http://tempuri.org/IProject5Services/WsOperationNamesResponse")]
        System.Threading.Tasks.Task<string[]> WsOperationNamesAsync(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperationInput", ReplyAction="http://tempuri.org/IProject5Services/WsOperationInputResponse")]
        string[] WsOperationInput(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperationInput", ReplyAction="http://tempuri.org/IProject5Services/WsOperationInputResponse")]
        System.Threading.Tasks.Task<string[]> WsOperationInputAsync(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperationReturn", ReplyAction="http://tempuri.org/IProject5Services/WsOperationReturnResponse")]
        string[] WsOperationReturn(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/WsOperationReturn", ReplyAction="http://tempuri.org/IProject5Services/WsOperationReturnResponse")]
        System.Threading.Tasks.Task<string[]> WsOperationReturnAsync(string wsUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/AddToList", ReplyAction="http://tempuri.org/IProject5Services/AddToListResponse")]
        void AddToList(string member, string url, string[] opNames, string[] opInputs, string[] opReturnTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/AddToList", ReplyAction="http://tempuri.org/IProject5Services/AddToListResponse")]
        System.Threading.Tasks.Task AddToListAsync(string member, string url, string[] opNames, string[] opInputs, string[] opReturnTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/LoadMyList", ReplyAction="http://tempuri.org/IProject5Services/LoadMyListResponse")]
        string[] LoadMyList(string member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/LoadMyList", ReplyAction="http://tempuri.org/IProject5Services/LoadMyListResponse")]
        System.Threading.Tasks.Task<string[]> LoadMyListAsync(string member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/LoadStaff", ReplyAction="http://tempuri.org/IProject5Services/LoadStaffResponse")]
        string[] LoadStaff(string member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject5Services/LoadStaff", ReplyAction="http://tempuri.org/IProject5Services/LoadStaffResponse")]
        System.Threading.Tasks.Task<string[]> LoadStaffAsync(string member);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProject5ServicesChannel : Project5.Project5ServicesProxy.IProject5Services, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Project5ServicesClient : System.ServiceModel.ClientBase<Project5.Project5ServicesProxy.IProject5Services>, Project5.Project5ServicesProxy.IProject5Services {
        
        public Project5ServicesClient() {
        }
        
        public Project5ServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Project5ServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Project5ServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Project5ServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddMember(string username, string password) {
            base.Channel.AddMember(username, password);
        }
        
        public System.Threading.Tasks.Task AddMemberAsync(string username, string password) {
            return base.Channel.AddMemberAsync(username, password);
        }
        
        public void AddStaffMember(string username, string password) {
            base.Channel.AddStaffMember(username, password);
        }
        
        public System.Threading.Tasks.Task AddStaffMemberAsync(string username, string password) {
            return base.Channel.AddStaffMemberAsync(username, password);
        }
        
        public bool MemberExists(string username) {
            return base.Channel.MemberExists(username);
        }
        
        public System.Threading.Tasks.Task<bool> MemberExistsAsync(string username) {
            return base.Channel.MemberExistsAsync(username);
        }
        
        public bool StaffExists(string username) {
            return base.Channel.StaffExists(username);
        }
        
        public System.Threading.Tasks.Task<bool> StaffExistsAsync(string username) {
            return base.Channel.StaffExistsAsync(username);
        }
        
        public string[] SearchForWsdl(string theSearch) {
            return base.Channel.SearchForWsdl(theSearch);
        }
        
        public System.Threading.Tasks.Task<string[]> SearchForWsdlAsync(string theSearch) {
            return base.Channel.SearchForWsdlAsync(theSearch);
        }
        
        public string[] WsOperations(string wsUrl) {
            return base.Channel.WsOperations(wsUrl);
        }
        
        public System.Threading.Tasks.Task<string[]> WsOperationsAsync(string wsUrl) {
            return base.Channel.WsOperationsAsync(wsUrl);
        }
        
        public string[] WsOperationNames(string wsUrl) {
            return base.Channel.WsOperationNames(wsUrl);
        }
        
        public System.Threading.Tasks.Task<string[]> WsOperationNamesAsync(string wsUrl) {
            return base.Channel.WsOperationNamesAsync(wsUrl);
        }
        
        public string[] WsOperationInput(string wsUrl) {
            return base.Channel.WsOperationInput(wsUrl);
        }
        
        public System.Threading.Tasks.Task<string[]> WsOperationInputAsync(string wsUrl) {
            return base.Channel.WsOperationInputAsync(wsUrl);
        }
        
        public string[] WsOperationReturn(string wsUrl) {
            return base.Channel.WsOperationReturn(wsUrl);
        }
        
        public System.Threading.Tasks.Task<string[]> WsOperationReturnAsync(string wsUrl) {
            return base.Channel.WsOperationReturnAsync(wsUrl);
        }
        
        public void AddToList(string member, string url, string[] opNames, string[] opInputs, string[] opReturnTypes) {
            base.Channel.AddToList(member, url, opNames, opInputs, opReturnTypes);
        }
        
        public System.Threading.Tasks.Task AddToListAsync(string member, string url, string[] opNames, string[] opInputs, string[] opReturnTypes) {
            return base.Channel.AddToListAsync(member, url, opNames, opInputs, opReturnTypes);
        }
        
        public string[] LoadMyList(string member) {
            return base.Channel.LoadMyList(member);
        }
        
        public System.Threading.Tasks.Task<string[]> LoadMyListAsync(string member) {
            return base.Channel.LoadMyListAsync(member);
        }
        
        public string[] LoadStaff(string member) {
            return base.Channel.LoadStaff(member);
        }
        
        public System.Threading.Tasks.Task<string[]> LoadStaffAsync(string member) {
            return base.Channel.LoadStaffAsync(member);
        }
    }
}
